import math

class TicTacToe:
    def __init__(self):
        self.board = [' ' for _ in range(9)]
        self.current_player = 'X'

    def print_board(self):
        for i in range(3):
            print('|'.join(self.board[i * 3:(i + 1) * 3]))
            if i < 2:
                print('-----')

    def is_winner(self, player):
        winning_combinations = [
            (0, 1, 2), (3, 4, 5), (6, 7, 8),
            (0, 3, 6), (1, 4, 7), (2, 5, 8),
            (0, 4, 8), (2, 4, 6)
        ]
        for combo in winning_combinations:
            if all(self.board[i] == player for i in combo):
                return True
        return False

    def is_full(self):
        return ' ' not in self.board

    def minimax(self, depth, is_maximizing):
        if self.is_winner('X'):
            return -1
        if self.is_winner('O'):
            return 1
        if self.is_full():
            return 0

        if is_maximizing:
            best_score = -math.inf
            for i in range(9):
                if self.board[i] == ' ':
                    self.board[i] = 'O'
                    score = self.minimax(depth + 1, False)
                    self.board[i] = ' '
                    best_score = max(best_score, score)
            return best_score
        else:
            best_score = math.inf
            for i in range(9):
                if self.board[i] == ' ':
                    self.board[i] = 'X'
                    score = self.minimax(depth + 1, True)
                    self.board[i] = ' '
                    best_score = min(best_score, score)
            return best_score

    def best_move(self):
        best_score = -math.inf
        move = -1
        for i in range(9):
            if self.board[i] == ' ':
                self.board[i] = 'O'
                score = self.minimax(0, False)
                self.board[i] = ' '
                if score > best_score:
                    best_score = score
                    move = i
        return move

    def play(self):
        while True:
            self.print_board()
            if self.current_player == 'X':
                move = int(input("Enter your move (1-9): ")) - 1
                if self.board[move] == ' ':
                    self.board[move] = 'X'
                    if self.is_winner('X'):
                        self.print_board()
                        print("Player X wins!")
                        break
                    self.current_player = 'O'
            else:
                move = self.best_move()
                self.board[move] = 'O'
                if self.is_winner('O'):
                    self.print_board()
                    print("Player O wins!")
                    break
            if self.is_full():
                self.print_board()
                print("It's a draw!")
                break

if __name__ == "__main__":
    game = TicTacToe()
    game.play()
